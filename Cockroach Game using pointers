
#include <iostream>
#include <conio.h>
#include <time.h>
#include <Windows.h>
#include <stdio.h>
using namespace std;

class game
{
private:
	int row;
	int col;
	int **arr;
	int r;
	int c;
public:
	game();
	~game();
	void set_cok();
	void move(char);
	void right();
	void left();
	void up();
	void down();
	void random();
	void print();
	void print_initial();
	void sum();
	int mini();
};
int game::mini(){

	int ab = arr[0][0];

	for (int i = 0; i < row; i++){
		for (int j = 0; j < col; j++){
			if (ab>arr[i][j]){
				ab = arr[i][j];
			}
		}
	}
	return ab;
}
void game::sum(){
	int s = 0;
	for (int i = 0; i < row; i++){
		for (int j = 0; j < col; j++){
			s = s + arr[i][j];
		}
	}
	cout << "Sum Of Total Moves Taken " << s << " " << endl;
}
void game::print_initial()
{
	cout << " Rows :"<<row << endl;
	cout << " Cols :" << col << endl;

}
void game::print()
{

	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			cout << arr[i][j] << " ";
		}
		cout << endl;
	}

}
void game::random()
{

	char *arra = new char[4];
	arra[0] = 'R';
	arra[1] = 'D';
	arra[2] = 'L';
	arra[3] = 'U';
aa:

	int a = rand() % 4;

	move(arra[a]);
	arr[r][c]++;

for (int i = 0; i < row; i++){
		for (int j = 0; j < col; j++){
			if (arr[i][j] == 0){
				goto aa;
				break;
			}
		}
	}
}
void game::right()
{
	if (c == col - 1)
	{

	}
	else
	{
		c++;
   }
}
void game::left()
{
	if (c == 0)
	{

	}
	else
	{
		c--;
	}
}
void game::up()
{
	if (r == 0)
	{

	}
	else
	{
		r--;
	}
}
void game::down()
{
	if (r == row - 1)
	{

	}
	else
	{
		r++;
	}
}
void game::move(char move)
{

	switch (move)
	{
	case 'R':
	{
				right();
				break;
	}

	case 'L':
	{
				left();
				break;
	}

	case 'U':
	{
				up();
				break;
	}


	case 'D':
	{
				down();
				break;
	}
	}
}


game::game()
{
	srand((unsigned)time(0));
	cout << "Enter the Rows:" << endl;
	cin >> row;

	cout << "Enter the COL:" << endl;
	cin >> col;


	arr = new int *[row];

	for (int i = 0; i < row; i++){
		arr[i] = new int[col];
	}
	for (int i = 0; i < row; i++){
		for (int j = 0; j < col; j++){
			arr[i][j] = 0;
		}
	}
}

game::~game()
{
	row = 0;
	col = 0;
	r = 0;
	c = 0;
	arr = NULL;
}
void game::set_cok()
{

	int rr, cc;
	cout << "Enter the place for cockroach (ROW)" << endl;
	cin >> rr;

	cout << "Enter the place for cockroach(COL)" << endl;
	cin >> cc;

	arr[rr][cc] = 1;

	r = rr;
	c = cc;

	cout << " Intial Cockroach Postion :" << rr << " " << "/" << cc << " " << endl;
}



int main()
{

	game obj;
	obj.set_cok();
	obj.random();
	cout << endl;
	obj.print_initial();
	obj.print();
	cout << endl;
	obj.sum();

	int q = obj.mini();
	cout << "Lowest Floor Visited Number is " << q << " " << endl;

	system("pause");
}
